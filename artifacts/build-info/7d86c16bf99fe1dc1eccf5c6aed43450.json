{
  "id": "7d86c16bf99fe1dc1eccf5c6aed43450",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.12",
  "solcLongVersion": "0.8.12+commit.f00d7308",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/utils/UtilsLib.sol": {
        "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n * @title Solidity Utils\n * @author Fabian Vogelsteller <fabian@lukso.network>\n *\n * @dev Utils functions\n */\n\npragma solidity 0.8.12;\n\n\nlibrary UtilsLib {\n\n    /**\n     * @dev Internal function to determine if an address is a contract\n     * @param _target The address being queried\n     *\n     * @return result Returns TRUE if `_target` is a contract\n     */\n    function isContract(address _target) internal view returns(bool result) {\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            result := gt(extcodesize(_target), 0)\n        }\n    }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/utils/UtilsLib.sol": {
        "UtilsLib": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220413bc8bafe942afe657a8ce45e3c8a23d8ba378959d254cb9b9c4947ab603e3d64736f6c634300080c0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE EXTCODESIZE 0xC8 0xBA INVALID SWAP5 0x2A INVALID PUSH6 0x7A8CE45E3C8A 0x23 0xD8 0xBA CALLDATACOPY DUP10 MSIZE 0xD2 SLOAD 0xCB SWAP12 SWAP13 0x49 SELFBALANCE 0xAB PUSH1 0x3E RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
              "sourceMap": "179:452:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:452:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220413bc8bafe942afe657a8ce45e3c8a23d8ba378959d254cb9b9c4947ab603e3d64736f6c634300080c0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE EXTCODESIZE 0xC8 0xBA INVALID SWAP5 0x2A INVALID PUSH6 0x7A8CE45E3C8A 0x23 0xD8 0xBA CALLDATACOPY DUP10 MSIZE 0xD2 SLOAD 0xCB SWAP12 SWAP13 0x49 SELFBALANCE 0xAB PUSH1 0x3E RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
              "sourceMap": "179:452:0:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/UtilsLib.sol\":\"UtilsLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/UtilsLib.sol\":{\"keccak256\":\"0x8d92149c62d9bb7207c8d66500007c3fa2307cb0140bb605978be314b1be1148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6e121dd13abaa663d615c8cd532aeb47b64d0a17c76a8b8e632fb6bf5236b317\",\"dweb:/ipfs/QmSYqnEMob6aeCrXxyHvimns3StYiaLJ6WsiqhhNLMTr3P\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/utils/UtilsLib.sol": {
        "ast": {
          "absolutePath": "contracts/utils/UtilsLib.sol",
          "exportedSymbols": {
            "UtilsLib": [
              12
            ]
          },
          "id": 13,
          "license": "Apache-2.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".12"
              ],
              "nodeType": "PragmaDirective",
              "src": "153:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "UtilsLib",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 12,
              "linearizedBaseContracts": [
                12
              ],
              "name": "UtilsLib",
              "nameLocation": "187:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 10,
                    "nodeType": "Block",
                    "src": "479:150:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "562:61:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "576:37:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_target",
                                        "nodeType": "YulIdentifier",
                                        "src": "601:7:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extcodesize",
                                      "nodeType": "YulIdentifier",
                                      "src": "589:11:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "589:20:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "611:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "586:2:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "586:27:0"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "576:6:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 4,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "601:7:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 7,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "576:6:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 9,
                        "nodeType": "InlineAssembly",
                        "src": "553:70:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2,
                    "nodeType": "StructuredDocumentation",
                    "src": "203:199:0",
                    "text": " @dev Internal function to determine if an address is a contract\n @param _target The address being queried\n @return result Returns TRUE if `_target` is a contract"
                  },
                  "id": 11,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nameLocation": "416:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "mutability": "mutable",
                        "name": "_target",
                        "nameLocation": "435:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "427:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "426:17:0"
                  },
                  "returnParameters": {
                    "id": 8,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "471:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "466:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "466:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "465:13:0"
                  },
                  "scope": 12,
                  "src": "407:222:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 13,
              "src": "179:452:0",
              "usedErrors": []
            }
          ],
          "src": "153:478:0"
        },
        "id": 0
      }
    }
  }
}
